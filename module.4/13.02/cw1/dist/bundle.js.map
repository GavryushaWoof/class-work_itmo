{"version":3,"sources":["webpack://$/webpack/bootstrap","webpack://$/./src/main.js","webpack://$/./src/greeter.js","webpack://$/./node_modules/mustache/mustache.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sayHelloUser","hello","sayHello","require","document","getElementsByTagName","innerHTML","PI","mustache","template","parse","toWhom","render","factory","objectToString","toString","isArray","Array","isFunction","escapeRegExp","string","replace","hasProperty","obj","propName","regExpTest","RegExp","test","nonSpaceRe","isWhitespace","re","testRegExp","entityMap","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","Scanner","this","tail","pos","Context","view","parentContext","cache","parent","Writer","templateCache","_cache","set","clear","eos","scan","match","index","substring","length","scanUntil","search","push","lookup","primitive","intermediateValue","names","context","lookupHit","indexOf","split","clearCache","tags","cacheKey","join","isCacheEnabled","tokens","undefined","openingTagRe","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","pop","compileTags","tagsToCompile","Error","start","type","chr","token","openSection","scanner","valueLength","charAt","nestedTokens","collector","numTokens","nestTokens","lastToken","squashedTokens","squashTokens","parseTemplate","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","self","j","slice","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","escape","version","defaultWriter","TypeError","String","define"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports.sayHelloUser = () => {\r\n    const sayHello = require('./greeter').sayHello;\r\n    const hello = sayHello('User!');\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    body.innerHTML = hello;\r\n};\r\n\r\nmodule.exports.PI = 3.14;","const mustache = require('mustache');\r\n\r\nconst template = '<h1>Hello <i>{{name}}!!!</i></h1>';\r\nmustache.parse(template);\r\n\r\nmodule.exports.sayHello = toWhom => {\r\n    return mustache.render(template, { name: toWhom });\r\n};","// This file has been generated from mustache.mjs\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Mustache = factory());\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  Writer.prototype.render = function render (template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.0.0',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  mustache.render = function render (template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n"],"sourceRoot":""}